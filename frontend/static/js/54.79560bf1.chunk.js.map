{"version":3,"sources":["components/pages/messages-items.js","components/pages/messages.jsx"],"names":["Inbox","React","useState","messageList","setMessageList","loading","setLoading","pageNo","setpageNo","total","limit","pagination","setPagination","currentUser","useSelector","user","token","ListInbox","a","axios","get","headers","Authorization","then","response","console","log","data","userData","length","catch","err","message","useEffect","className","map","item","to","pathname","state","sender","firstName","body","slice","format","createdAt","Sent","ListSent","Deleted","Messages","useHistory","CountryReducer","country","aboutUs","Banners","mounted","setMounted","Header","style","height","onClick","bind"],"mappings":"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","file":"static/js/54.79560bf1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Inbox = () => {\r\n  const [messageList, setMessageList] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [pageNo, setpageNo] = React.useState(0);\r\n  const [pagination, setPagination] = React.useState({ total: 0, limit: \"\" });\r\n  const currentUser = useSelector(({ user }) => user.currentUser);\r\n  const token = currentUser && currentUser.token;\r\n\r\n  //     body: \"is this available\"\r\n  // createdAt: \"2021-11-11T11:32:47.184Z\"\r\n  // isDeleted: false\r\n  // receiver: \"614673e191962c0583547e63\"\r\n  // sender: {created_at: '2021-11-08T13:16:41.708Z', updated_at: '2021-11-08T13:16:41.708Z', plans: 'Premium', _id: '6189263f6657212df42ccab5', firstName: 'martins', â€¦}\r\n  // title: \"House Available in Lagos\"\r\n  // updatedAt: \"2021-11-11T11:32:47.184Z\"\r\n  const ListInbox = async () => {\r\n    // const states = \"lagos\";\r\n    setLoading(true);\r\n    await axios\r\n      .get(`/api/v1/FetchReceivedMessages?pageNo=${pageNo}`, {\r\n        headers: { Authorization: token },\r\n      })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        console.log(response.data);\r\n        response.data.userData && setMessageList(response.data.userData);\r\n        response.data.userData &&\r\n          response.data.userData.length > 0 &&\r\n          setPagination({\r\n            ...pagination,\r\n            limit: response.data.limit,\r\n            total: response.data.total,\r\n          });\r\n        response.data.userData.length > 0 && setpageNo(pageNo + 1);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        if (err.response && err.response.data.message) {\r\n        } else {\r\n          console.log(\"error occured\");\r\n        }\r\n        // console.log(err);\r\n      });\r\n  };\r\n  const MapMessage = () => {\r\n    return (\r\n      messageList.length > 0 &&\r\n      messageList.map((item) => (\r\n        <Link className='messageLinks' to={{ pathname: \"/Message_details\",state:item }}>\r\n          <li >\r\n            <span>\r\n              <i className=\"flaticon-interior-design icon-msg color-primary\" />\r\n              {item.sender.firstName}\r\n            </span>{\" \"}\r\n            <span>{item.body.slice(0, 40)}...</span>\r\n            <span>\r\n              <Moment format=\"DD/MM/YYYY\">{item.createdAt}</Moment>\r\n            </span>\r\n          </li>\r\n        </Link>\r\n      ))\r\n    );\r\n  };\r\n  React.useEffect(() => {\r\n    ListInbox();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <ul className=\"msg-list col-lg-11\">\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : messageList.length > 0 ? (\r\n          MapMessage()\r\n        ) : (\r\n          <p>Empty......</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport const Sent = () => {\r\n  const [messageList, setMessageList] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [pageNo, setpageNo] = React.useState(0);\r\n  const [pagination, setPagination] = React.useState({ total: 0, limit: \"\" });\r\n  const currentUser = useSelector(({ user }) => user.currentUser);\r\n  const token = currentUser && currentUser.token;\r\n\r\n  const ListSent = async () => {\r\n    // const states = \"lagos\";\r\n    setLoading(true);\r\n    await axios\r\n      .get(`/api/v1/FetchSentMessages?pageNo=${pageNo}`, {\r\n        headers: { Authorization: token },\r\n      })\r\n      .then((response) => {\r\n        setLoading(false);\r\n        console.log(response.data);\r\n        response.data.userData && setMessageList(response.data.userData);\r\n        response.data.userData &&\r\n          response.data.userData.length > 0 &&\r\n          setPagination({\r\n            ...pagination,\r\n            limit: response.data.limit,\r\n            total: response.data.total,\r\n          });\r\n        response.data.userData.length > 0 && setpageNo(pageNo + 1);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        if (err.response && err.response.data.message) {\r\n        } else {\r\n          console.log(\"error occured\");\r\n        }\r\n        // console.log(err);\r\n      });\r\n  };\r\n  const MapMessage = () => {\r\n    return (\r\n      messageList.length > 0 &&\r\n      messageList.map((item) => (\r\n       \r\n        <Link className='messageLinks' to={{ pathname: \"/Message_details_sent\",state:item }}>\r\n        <li>\r\n          <span>\r\n            <i className=\"flaticon-interior-design icon-msg color-primary\" />\r\n            {item.sender.firstName}\r\n          </span>{\" \"}\r\n          <span>{item.body.slice(0, 100)}...</span>\r\n          <span>\r\n            <Moment format=\"DD/MM/YYYY\">{item.createdAt}</Moment>\r\n          </span>\r\n        </li>\r\n</Link>\r\n      ))\r\n    );\r\n  };\r\n  React.useEffect(() => {\r\n    ListSent();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"msg-list col-lg-11\">\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : messageList.length > 0 ? (\r\n          MapMessage()\r\n        ) : (\r\n          <p>Empty......</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport const Deleted = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"msg-list col-lg-11\">\r\n        <li>\r\n          <span>Peter jones</span> <span>Thi is spome title of a message</span>{\" \"}\r\n          <span>11/03/23</span>\r\n        </li>\r\n        <li>\r\n          <span>Peter jones</span> <span>Thi is spome title of a message</span>{\" \"}\r\n          <span>11/03/23</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Header from \"../Header\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport axios from \"axios\";\r\nimport Footer from \"../footer\";\r\nimport { Deleted, Inbox, Sent } from \"./messages-items\";\r\n\r\nconst Messages = () => {\r\n  const history = useHistory();\r\n\r\n  const country = useSelector(({ CountryReducer }) => CountryReducer.country);\r\n  const [homepageData, setHomePageData] = React.useState({\r\n    aboutUs: [],\r\n    Banners: [],\r\n  });\r\nconst [mounted,setMounted] =React.useState(1)\r\n  // const fetchHomepageModels = async () => {\r\n  //   return await axios\r\n  //     .get(`/api/v1/fetchHomepageModels`)\r\n  //     .then((response) => response)\r\n  //     .catch((err) => err);\r\n  // };\r\n  // React.useEffect(\r\n  //   () =>\r\n  //     fetchHomepageModels()\r\n  //       .then((res) => {\r\n  //         setHomePageData({ ...res.data.userData });\r\n  //       })\r\n  //       .catch((err) => console.log(err)),\r\n\r\n  //   []\r\n  // );\r\n  // const mapAboutus = () => {\r\n  //   return (\r\n  //     homepageData.aboutUs.length > 0 &&\r\n  //     homepageData.aboutUs.map((xxx, index) => (\r\n  //       <div key={index} className=\"card border-0\">\r\n  //         <div\r\n  //           className=\"st-top d-inline-block position-relative card-header px-0 border-0 rounded-0 bg-transparent\"\r\n  //           id=\"headingone\"\r\n  //         >\r\n  //           <h4 className=\"mb-0\">{xxx.title}</h4>\r\n  //         </div>\r\n  //         <div\r\n  //           className=\"collapse show\"\r\n  //           aria-labelledby=\"headingone\"\r\n  //           data-parent=\"#accordion\"\r\n  //         >\r\n  //           <div className=\"card-body mb-15\">{xxx.body}</div>\r\n  //         </div>\r\n  //       </div>\r\n  //     ))\r\n  //   );\r\n  // };\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div>\r\n        <div className=\"topPatch\" style={{ height: \"80px\" }} />\r\n        <div className=\"poststep pricing my-80\">\r\n          <div className=\"container\">\r\n            <h3 className=\"color-secondary line-bottom pb-15 mb-20\">\r\n              My messages\r\n            </h3>\r\n            <div className=\"col-md-12 col-lg-12 bg-white  px-60 wow animated slideInUp\">\r\n              <span className=\"color-secondary d-flex flex-row\">\r\n                <div  onClick={setMounted.bind(this,1)} className={`col-lg-2 message-selectors ${mounted===1&&\"active\"}`}>\r\n                  <h6>Inbox</h6>\r\n                </div>\r\n                <div  onClick={setMounted.bind(this,2)} className={`col-lg-2 message-selectors ${mounted===2&&\"active\"}`}>\r\n                  <h6>Sent</h6>\r\n                </div>\r\n                {/* <div onClick={setMounted.bind(this,3)} className={`col-lg-2 message-selectors ${mounted===3&&\"active\"}`}>\r\n                  <h6>Deleteed(3)</h6>\r\n                </div> */}\r\n              </span>\r\n              <section className='messageContainer mt-5'>\r\n{mounted===1?<Inbox/>:mounted===3?<Deleted/>:mounted===2?<Sent/>:null}\r\n              </section>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n"],"sourceRoot":""}